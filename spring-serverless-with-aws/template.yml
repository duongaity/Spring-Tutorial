AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: AWS Serverless Spring Boot 2 API

Globals:
  Api:
    EndpointConfiguration: REGIONAL
  Function:
    Timeout: 180

Parameters:
  EnvironmentName:
    Description: 'Required. Environment you are deploying'
    Type: String
    Default: dev
  DomainName:
    Description: 'Required. Domain you are deploying'
    Type: String
    Default: api.example.com

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref EnvironmentName
      OpenApiVersion: '2.0'
      Description: API supporting the application
      Cors:
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowMethods: "'DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT'"
        AllowOrigin: "'*'"
  SpringServerlessWithAwsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.gateam.spring.serverless.StreamLambdaHandler::handleRequest
      Runtime: java17
      CodeUri: .
      MemorySize: 512
      Policies: AWSLambdaBasicExecutionRole
      Timeout: 30
      Environment:
        Variables:
          RDS_HOSTNAME: jdbc:mysql://db-serverless.c2zsb9ir0usp.us-east-1.rds.amazonaws.com_3306
          RDS_DB_NAME: db-serverless
          RDS_USERNAME: root
          RDS_PASSWORD: 12345678
      Events:
        ProxyResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
            RestApiId: !Ref ApiGatewayApi

Outputs:
  SpringServerlessWithAwsApi:
    Description: URL for application
    Value: !Sub 'https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${EnvironmentName}'
    Export:
      Name: ApiGatewayApi
